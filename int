int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;
int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;
int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;
int num = *it; //where it is the iterator
auto ite = upper_bound(it,S.end(),num);
int dup = distance(it,ite);
...
it = ite;
 this input list contains duplicates
mylist = [5, 3, 5, 2, 1, 6, 6, 4] # 5 & 6 are duplicate numbers.
# find the length of the list
print(len(mylist))
8
# create a set from the list
myset = set(mylist)
# find the length of the Python set variable myset
print(len(myset))
6


